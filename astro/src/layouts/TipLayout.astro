---
import { getEntry, type CollectionEntry } from "astro:content";
import { getTipCatalog, getRelatedTips, type TipCatalog } from "../lib/tips";
import { getOpenGraphImageData } from "@lib/og-image";
import { isEmpty } from "lodash-es";

import type { Breadcrumbs, PageMetadata } from "../lib/types";

const defaultCrumbs: Breadcrumbs = [
  {
    name: "Home",
    href: "/",
  },
  {
    name: "Tip of the Week",
    href: "/tips/",
  },
];

interface Props {
  slug?: CollectionEntry<"atotw">["slug"];
  tip?: CollectionEntry<"atotw">;
  catalog: TipCatalog;
  crumbs?: Breadcrumbs;
  title?: string;
}

const {
  slug = undefined,
  catalog = await getTipCatalog(),
  crumbs = defaultCrumbs,
} = Astro.props;

const { tip = slug && (await getEntry("atotw", slug)) } = Astro.props;
if (tip === undefined || isEmpty(tip))
  throw new Error("Either the 'tip' or the 'slug' is required");

const { title = tip?.data.title || "Tip of the Week" } = Astro.props;
const { tips = [] } = catalog;
const related = await getRelatedTips(tip);

import { Icon } from "astro-icon/components";
import ImageHeading from "../components/ImageHeading.astro";
import Layout from "../layouts/Layout.astro";
import ThemedSection from "../components/ThemedSection.astro";
import TipLicense from "../components/TipLicense.astro";
import TipOfTheWeek from "../components/TipOfTheWeek.astro";
import TipRegistration from "../components/TipRegistration.astro";

const header =
  Astro.slots.has("header") ?
    await Astro.slots.render("header")
  : "Accessibility <strong>Tip</strong>&nbsp;of the <strong>Week</strong>";

const metadata: PageMetadata = {
  title,
  description: tip?.data.summary || "",
  type: "article",
  image: getOpenGraphImageData(Astro.site, "tips", tip.slug, tip.data.summary),
};
---

<Layout {title} {crumbs} {metadata}>
  <Fragment slot="metadata">
    <meta
      property="article:published_time"
      content={tip?.data.published.toISOString()}
    />
    <meta property="article:section" content="Accessibility" />
    {
      tip?.data.tags?.map((tag) => (
        <meta property="article:tag" content={tag} />
      ))
    }
  </Fragment>
  <Fragment slot="head">
    <link
      rel="alternate"
      type="application/rss+xml"
      title="Accessible Community's Tip of the Week"
      href={`${Astro.site}/services/tip-of-the-week/rss.xml`}
    />
  </Fragment>

  <ImageHeading image={tip?.data.theme} slot="header" set:html={header} />
  <ThemedSection style="tertiary">
    <div
      class="d-flex flex-column flex-lg-row justify-content-lg-between gap-3"
    >
      <div class="col col-lg-7">
        {tip && <TipOfTheWeek {tip} />}
      </div>
      <nav
        class="d-flex flex-column flex-md-row d-lg-block gap-4 col-lg-4"
        aria-label="Tips"
      >
        <ul class="list-unstyled mb-4">
          {
            isEmpty(tips) ? "" : (
              <li class="text-primary-emphasis">
                <span class="display-6">
                  <span class="fw-bold">Related</span> Tips
                </span>
                <ul class="mt-1 mb-3 list-disc list-spaced">
                  {related.map((b) => (
                    <li>
                      <a href={`/tips/${b.slug}`}>{b.data.title}</a>
                    </li>
                  ))}
                </ul>
              </li>
            )
          }
        </ul>
        <div class="col col-md-6 col-lg-12">
          <TipRegistration defaultWidth border={2}>
            <p>
              Would you like to receive these tips automatically?
              <a class="icon-link" href="/tips/rss.xml">
                Subscribe by RSS <Icon class="bi" name="bi:rss-fill" />
              </a>
              or register below to get them in your inbox.
            </p>
            <hr class="border border-3 form-border opacity-75" />
            <p class="display-6 text-info-emphasis">
              Email the <strong>Tip of the Week</strong>.
            </p>
          </TipRegistration>
        </div>
      </nav>
    </div>
  </ThemedSection>

  <ThemedSection style="secondary" py={3}>
    <TipLicense />
  </ThemedSection>
</Layout>
