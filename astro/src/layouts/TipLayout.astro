---
import { getEntry } from "astro:content";
import { getTipCatalog } from "../lib/tips";
import { isEmpty, startCase } from "lodash-es";

const defaultCrumbs = [
  {
    name: "Home",
    href: "/",
  },
  {
    name: "Tip of the Week",
    href: "/tips/",
  },
];

interface Props {
  slug: string | undefined; // TODO: Determine how to get type definition from content.
  tip: object | undefined;
  catalog: object; // TODO: Define catalog definition in blog library
  crumbs?: object;
  title?: string; // What to show in the breadcrumbs as the title. Defaults to blog post title.
  heading?: string; // What to show in the header. Default to blog post title.
  sidebar?: boolean; // Whether to prefer the sidebar when the display gets small.
}

const {
  slug = undefined,
  catalog = await getTipCatalog(),
  crumbs = defaultCrumbs,
  sidebar = false,
} = Astro.props;
const {
  tip = slug && await getEntry("atotw", slug)
} = Astro.props;
const {
  title = tip?.data.title,
} = Astro.props;
const { tips = [], categories = [] } = catalog;

import { Icon } from 'astro-icon/components';
import ImageHeading from "../components/ImageHeading.astro";
import Layout from "../layouts/Layout.astro";
import ThemedSection from "../components/ThemedSection.astro";
import TipLicense from "../components/TipLicense.astro";
import TipOfTheWeek from "../components/TipOfTheWeek.astro";
import TipRegistration from "../components/TipRegistration.astro";

const header = Astro.slots.has('header') ?
  await Astro.slots.render('header') :
  "Accessibility <strong>Tip</strong>&nbsp;of the <strong>Week</strong>";
---

<Layout title={title} crumbs={crumbs}>
  <Fragment slot="metadata">
    <meta property="og:title" content={title} />
    <meta name="twitter:title" content={title} />
    <meta property="og:type" content="article" />
    <meta
      property="article:published_time"
      content={tip?.data.published.toISOString()}
    />
    <meta property="article:section" content="Accessibility" />
    {tip?.data.tags?.map((tag) => <meta property="article:tag" content={tag} />)}
  </Fragment>  
  <Fragment slot="head">
    <link
      rel="alternate"
      type="application/rss+xml"
      title="Accessible Community's Tip of the Week"
      href={`${Astro.site}/services/tip-of-the-week/rss.xml`}
    />
  </Fragment>
  <ImageHeading image="notes" slot="header" set:html={header} />

  <ThemedSection style="tertiary" py={4}>
    <div class="d-flex flex-column flex-lg-row justify-content-lg-between gap-3">
      <div class="col col-lg-7">
        <TipOfTheWeek tip={tip} />
      </div>
      <nav
        class="d-flex flex-column flex-md-row d-lg-block gap-4 col-lg-4"
        aria-label="Tips"
      >
        <div class="col col-md-6 col-lg-12 mb-4">
          <TipRegistration defaultWidth border={2}>
            <p>
              Would you like to receive these tips automatically? 
              <a class="icon-link" href="/tips/rss.xml">
                Subscribe by RSS <Icon class="bi" name="bi:rss-fill"></Icon> 
              </a>
              or register below to get them in your inbox.
            </p>
            <hr class="border border-1 border-info opacity-75" />
            <p class="display-6 text-info-emphasis">
              Email the <strong>Tip of the Week</strong>.
            </p>
          </TipRegistration>
        </div>
        <ul class="list-unstyled">
          {
            isEmpty(tips) ? "" : (
              <li class="text-primary-emphasis">
                <span class="display-6">Recent Tips</span>
                <ul class="mt-1 mb-3 list-disc">
                  {tips.slice(0, 10).map((b) => (
                    <li>
                      <a href={`/tips/${b.slug}`}>{b.data.title}</a>
                    </li>
                  ))}
                </ul>
              </li>
            )
          }
          {
            isEmpty(categories) ? "" : (
              <li class="text-primary-emphasis">
                <span class="display-6">Categories</span>
                <ul class="mt-1 mb-3 list-disc">
                  <li class="list-item">
                    <a href="/tips/archive">Full Archive</a>
                  </li>
                  {categories.map((cat) => (
                    <li class="list-item">
                      <a href={`/tips/archive/${cat}`}>{startCase(cat)}</a>
                    </li>
                  ))}
                </ul>
              </li>
            )
          }
        </ul>
      </nav>
    </div>
  </ThemedSection>

  <ThemedSection style="secondary" py={0}>
    <TipLicense />
  </ThemedSection>
</Layout>
