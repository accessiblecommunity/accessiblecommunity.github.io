---
interface Props {
  href: URL | string;
  title?: string;
  // Any additional HTML classes to apply to the link.
  class?: string;
  // Whether to wrap the slot in a span to avoid gaps between child elements. Defaults to false.
  gaps?: boolean;
  // Whether to force the link to be completely inline with surrounding text. Defaults to false.
  inline?: boolean;
}

const {
  href,
  class: extraClasses = "",
  title = undefined,
  gaps = false,
  inline = false,
} = Astro.props;

import { Icon } from "astro-icon/components";

// The below is formatted to remove as much whitespace as possible.
---

{/* Style is up top to remove additional whitespace after the tag */}
<style is:global>
  .icon-link > .bi.external {
    /* These make it act like a `sup` */
    font-size: 0.75em;
    align-self: flex-start !important;
  }
  .icon-link.d-inline > .bi.external {
    /* No gap, so move it back and up. */
    margin-left: 0.2em;
    vertical-align: text-top;
  }
</style>
<style>
  .icon-link {
    /* Use smaller gap size */
    gap: 0.2em;
  }
</style>
<a
  href={href}
  title={title}
  class:list={["icon-link", extraClasses, inline && "d-inline"]}
  target="_blank"
  rel="noopener noreferrer"
  >{
    /* prettier-ignore */
    gaps ?
      <slot />
    : <span><slot /></span>
  }<Icon
    name="bi:arrow-up-right-square"
    class:list={["bi", "external"]}
    role="img"
    aria-label="External link"
  /></a
>
