---
import { getCollection } from 'astro:content';
import { getBlogAuthors, orderByRecent } from '../../../lib/blog'

export async function getStaticPaths() {
  const authors  = await getBlogAuthors();
  const crumbs = [{
    name: 'Home', href: "/"
  }, {
    name: 'Blog', href: "/blog"
  }, {
    name: 'Authors', href: "/blog/authors"
  }]

  return authors.map(author => ({
    params: { slug: author.slug }, props: { crumbs, author },
  })); 
}

interface Props {
  author: object;  // TODO: Determine how to get type definition from content.
  crumbs: Array<object>;
}

const { crumbs, author } = Astro.props;
const authoredBlogs = await getCollection('blogs', ({ data }) => {
  return (data.author.slug === author.slug);
});
const orderedBlogs: Array<object> = await orderByRecent(authoredBlogs)

import BlogLayout from '../../../layouts/BlogLayout.astro';
---

<BlogLayout
  title={author.data.name}
  heading={`Blogs by ${author.data.name}`}
  crumbs={crumbs}
  blog={orderedBlogs[0]}
  catalog={{ blogs: orderedBlogs }}
  sidebar={true}
/>
