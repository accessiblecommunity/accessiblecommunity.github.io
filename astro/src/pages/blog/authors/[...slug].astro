---
import { getCollection } from "astro:content";
import { getBlogAuthors, orderByRecent } from "../../../lib/blog";
import type { Breadcrumbs } from "@lib/types";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const authors = await getBlogAuthors();
  const crumbs: Breadcrumbs = [
    {
      name: "Home",
      href: "/",
    },
    {
      name: "Blog",
      href: "/blog",
    },
    {
      name: "Authors",
      href: "/blog/authors",
    },
  ];

  return authors.map((author) => ({
    params: { slug: author.id },
    props: { crumbs, author },
  }));
}

interface Props {
  author: CollectionEntry<"staff">;
  crumbs: Breadcrumbs;
}

const { crumbs, author } = Astro.props;
const authoredBlogs = await getCollection("blogs", ({ data }) => {
  return data.author.id === author.id;
});
const orderedBlogs: Array<CollectionEntry<"blogs">> =
  await orderByRecent(authoredBlogs);

import BlogLayout from "../../../layouts/BlogLayout.astro";
---

<BlogLayout
  title={`Blogs by ${author.data.name}`}
  {crumbs}
  blog={orderedBlogs[0]}
  catalog={{ blogs: orderedBlogs }}
  sidebar={true}
>
  <Fragment slot="header">
    <strong>Blogs</strong> by {author.data.name}
  </Fragment>
</BlogLayout>
