---
import { getCollection } from "astro:content";
import { getBlogDates, orderByRecent } from "../../../lib/blog";
import { kebabCase } from "lodash-es";
import type { Breadcrumbs } from "@lib/types";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const dates = await getBlogDates();
  const crumbs: Breadcrumbs = [
    {
      name: "Home",
      href: "/",
    },
    {
      name: "Blog",
      href: "/blog",
    },
    {
      name: "Dates",
      href: "/blog/dates",
    },
  ];

  return dates.map((month) => ({
    params: { slug: kebabCase(month) },
    props: { crumbs, month },
  }));
}

interface Props {
  month: string;
  crumbs: Breadcrumbs;
}

const { crumbs, month } = Astro.props;
const monthBlogs = await getCollection("blogs", ({ data }) => {
  const published = data.published.toLocaleDateString("en-us", {
    year: "numeric",
    month: "long",
  });
  return published === month;
});
const orderedBlogs: Array<CollectionEntry<"blogs">> = await orderByRecent(monthBlogs);

import BlogLayout from "../../../layouts/BlogLayout.astro";
---

<BlogLayout
  title={`Blogs during ${month}`}
  {crumbs}
  blog={orderedBlogs[0]}
  catalog={{ blogs: orderedBlogs }}
  sidebar={true}
>
  <Fragment slot="header">
    <strong>Blogs</strong> during {month}
  </Fragment>
</BlogLayout>
