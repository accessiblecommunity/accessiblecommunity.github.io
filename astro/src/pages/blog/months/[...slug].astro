---
import { getCollection } from 'astro:content';
import { getBlogMonths, orderByRecent } from '../../../lib/blog';
import { kebabCase } from 'lodash-es';

export async function getStaticPaths() {
  const months = await getBlogMonths();
  const crumbs = [{
    name: 'Home', href: "/"
  }, {
    name: 'Blog', href: "/blog"
  }, {
    name: 'Months', href: "/blog/months"
  }]

  return months.map(month => ({
    params: { slug: kebabCase(month) }, props: { crumbs, month },
  })); 
}

interface Props {
  month: string;
  crumbs: Array<object>;
}

const { crumbs, month } = Astro.props;
const monthBlogs = await getCollection('blogs', ({ data }) => {
  const published = data.published.toLocaleDateString('en-us', {
    year: 'numeric',
    month: 'long',
  });
  return published === month;
});
const orderedBlogs: Array<object> = await orderByRecent(monthBlogs)

import BlogLayout from '../../../layouts/BlogLayout.astro';
---

<BlogLayout
  title={month}
  heading={`Blogs during ${month}`}
  crumbs={crumbs}
  blog={orderedBlogs[0]}
  catalog={{ blogs: orderedBlogs }}
  sidebar={true}
/>
  