---
import { getOpenGraphImageData } from "@lib/og-image";
import type { Breadcrumbs, PageMetadata } from "@lib/types";

const title = "Access Your Kit - The Accessible Escape Room";
const metadata: PageMetadata = {
  title,
  description: "Access your purchased escape room kit materials",
  image: getOpenGraphImageData(Astro.site, "pages", "kit-access"),
};
const crumbs: Breadcrumbs = [
  { name: "Home", href: "/" },
  { name: "Services", href: "/services" },
  { name: "Escape Room", href: "/services/escape-room" },
];

import Branding from "@components/Branding.astro";
import Layout from "src/layouts/Layout.astro";
import ThemedSection from "@components/ThemedSection.astro";
import { Icon } from "astro-icon/components";
---

<Layout {title} {crumbs} {metadata}>
  <div class="container-fluid bg-primary text-white py-5 d-flex flex-column" slot="header">
    <div class="container">
      <div class="row justify-content-center">
        <div class="col-lg-8 text-center">
          <h1 class="display-3 mb-3">
            Access Your <Branding>Escape Room Kit</Branding>
          </h1>
          <p class="lead">
            Enter your purchase code and email to access your kit materials
          </p>
        </div>
      </div>
    </div>
  </div>

  <!-- Access Form Section -->
  <ThemedSection style="tertiary">
    <div class="row justify-content-center">
      <div class="col-lg-6">
        <div class="card shadow-lg border-0">
          <div class="card-header bg-primary text-white text-center">
            <h4 class="mb-0">
              <Icon name="bi:person-fill" class="me-2" />
              Verify Your Purchase
            </h4>
          </div>
          <div class="card-body">
            <form id="access-form" novalidate>
              <!-- TODO: Add login option here:
                   - "Sign in with Google" button above the form
                   - Shows user's purchase history if logged in
                   - Optional account linking after successful code verification -->
              
              <div class="mb-3">
                <label for="purchase-code" class="form-label">
                  Purchase Code *
                </label>
                <input 
                  type="text" 
                  id="purchase-code" 
                  name="purchaseCode" 
                  class="form-control" 
                  placeholder="ESC-XXXXXXXX" 
                  required 
                  aria-describedby="purchase-code-error purchase-code-help"
                  autocomplete="off"
                  style="text-transform: uppercase;"
                >
                <div id="purchase-code-help" class="form-text">
                  Enter the purchase code from your confirmation email
                </div>
                <div id="purchase-code-error" class="invalid-feedback" role="alert"></div>
              </div>

              <div class="mb-4">
                <label for="email" class="form-label">
                  Email Address *
                </label>
                <input 
                  type="email" 
                  id="email" 
                  name="email" 
                  class="form-control" 
                  placeholder="your@email.com" 
                  required 
                  aria-describedby="email-error"
                  autocomplete="email"
                >
                <div id="email-error" class="invalid-feedback" role="alert"></div>
              </div>

              <div class="d-grid">
                <button type="submit" class="btn btn-primary btn-lg" id="access-button">
                  <Icon name="bi:arrow-right-square" class="me-2" />
                  Access Kit Materials
                </button>
              </div>
              
              <!-- TODO?: Add account creation prompt after successful access:
                   - "Want to save this for easier access next time? Create an account"
                   - Link this purchase to a user account for future reference -->
            </form>

            <div id="access-messages" class="mt-3" role="alert" aria-live="polite"></div>
          </div>
        </div>
      </div>
    </div>
  </ThemedSection>

  <!-- Kit Materials Section (Only shown after verification) -->
  <div id="kit-materials" style="display: none;">
    <!-- This section is dynamically populated only after successful verification -->
  </div>

  <!-- Help Section -->
  <ThemedSection>
    <div class="text-center">
      <h2 class="display-4 mb-4">Need Help?</h2>
      <div class="row g-4">
        <div class="col-md-4">
          <div class="card border-0 shadow">
            <div class="card-body text-center">
              <Icon name="bi:envelope-at-fill" class="text-primary mb-3" style="font-size: 2rem;" />
              <h5>Lost Your Code?</h5>
              <p class="text-muted">Check your email confirmation or contact support</p>
              <a href="mailto:escaperoom@accessiblecommunity.org" class="btn btn-outline-primary">
                Email Support
              </a>
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="card border-0 shadow">
            <div class="card-body text-center">
              <Icon name="bi:people-fill" class="text-primary mb-3" style="font-size: 2rem;" />
              <h5>Setup Help</h5>
              <p class="text-muted">Get assistance setting up your escape room</p>
              <a href="mailto:escaperoom@accessiblecommunity.org" class="btn btn-outline-primary">
                Get Setup Help
              </a>
            </div>
          </div>
        </div>
        <div class="col-md-4">
          <div class="card border-0 shadow">
            <div class="card-body text-center">
              <Icon name="bi:gift-fill" class="text-primary mb-3" style="font-size: 2rem;" />
              <h5>Purchase More</h5>
              <p class="text-muted">Want another theme or kit type?</p>
              <a href="/services/escape-room/purchase" class="btn btn-outline-primary">
                View Kits
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </ThemedSection>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('access-form');
      const accessButton = document.getElementById('access-button');
      const messagesDiv = document.getElementById('access-messages');

      // Check URL parameters for auto-fill
      const urlParams = new URLSearchParams(window.location.search);
      const codeParam = urlParams.get('code');
      
      if (codeParam) {
        const purchaseCodeInput = document.getElementById('purchase-code');
        if (purchaseCodeInput) {
          purchaseCodeInput.value = codeParam;
        }
      }

      // Form submission handler
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Clear previous messages
        messagesDiv.innerHTML = '';
        clearErrors();

        // Get form data
        const formData = new FormData(form);
        const purchaseCode = formData.get('purchaseCode').toString().trim().toUpperCase();
        const email = formData.get('email').toString().trim();

        // Validate form
        if (!validateForm(purchaseCode, email)) {
          return;
        }

        // Disable button and show loading
        accessButton.disabled = true;
        accessButton.innerHTML = `
          <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
          Verifying...
        `;

        try {
          // Verify purchase code
          const response = await fetch('/api/verify-purchase', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ purchaseCode, email })
          });

          const result = await response.json();

          if (response.ok && result.valid) {
            showSuccess('Access granted! Your kit materials are now available below.');
            displayKitMaterials(result);
          } else {
            showError(result.error || 'Invalid purchase code or email address.');
          }

        } catch (error) {
          console.error('Error verifying purchase:', error);
          showError('Unable to verify your purchase. Please try again or contact support.');
        } finally {
          // Re-enable button
          accessButton.disabled = false;
          accessButton.innerHTML = `
            <i class="bi bi-arrow-right-square me-2"></i>
            Access Kit Materials
          `;
        }
      });

      function validateForm(purchaseCode, email) {
        let isValid = true;

        // Purchase code validation - generic error only
        if (!purchaseCode) {
          showFieldError('purchase-code-error', 'Invalid credentials provided');
          document.getElementById('purchase-code').classList.add('is-invalid');
          isValid = false;
        } else if (!/^ESC-[A-Z0-9]{8}$/.test(purchaseCode)) {
          showFieldError('purchase-code-error', 'Invalid credentials provided');
          document.getElementById('purchase-code').classList.add('is-invalid');
          isValid = false;
        }

        // Email validation - generic error only
        if (!email) {
          showFieldError('email-error', 'Invalid credentials provided');
          document.getElementById('email').classList.add('is-invalid');
          isValid = false;
        } else if (!isValidEmail(email)) {
          showFieldError('email-error', 'Invalid credentials provided');
          document.getElementById('email').classList.add('is-invalid');
          isValid = false;
        }

        return isValid;
      }

      function clearErrors() {
        document.querySelectorAll('.invalid-feedback').forEach(el => {
          el.textContent = '';
          el.style.display = 'none';
        });
        document.querySelectorAll('.form-control').forEach(el => {
          el.classList.remove('is-invalid');
        });
      }

      function showFieldError(errorId, message) {
        const errorElement = document.getElementById(errorId);
        if (errorElement) {
          errorElement.textContent = message;
          errorElement.style.display = 'block';
        }
      }

      function isValidEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
      }

      function showError(message) {
        messagesDiv.innerHTML = `
          <div class="alert alert-danger" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            ${message}
          </div>
        `;
      }

      function showSuccess(message) {
        messagesDiv.innerHTML = `
          <div class="alert alert-success" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>
            ${message}
          </div>
        `;
      }

      function displayKitMaterials(purchaseData) {
        const { kitType, theme, organization, sessionId } = purchaseData;
        
        // Create the entire materials section only after successful verification
        const kitMaterialsSection = document.getElementById('kit-materials');
        if (!kitMaterialsSection) return;
        
        // Generate the complete materials section
        const materialsSection = createMaterialsSection(kitType, theme, organization, sessionId);
        
        // Replace the empty div with the full materials section
        kitMaterialsSection.innerHTML = materialsSection;
        kitMaterialsSection.style.display = 'block';

        // Scroll to materials section
        kitMaterialsSection.scrollIntoView({ behavior: 'smooth' });
      }

      function createMaterialsSection(kitType, theme, organization, sessionId) {
        const kitTypeName = kitType === 'build' ? 'Build-your-own' : 'Ready-made';

        return `
          <section class="bg-secondary text-white py-5">
            <div class="container">
              <div class="text-center mb-5">
                <h2 class="display-4 mb-3">Your Kit Materials</h2>
                <p class="lead">Welcome to your accessible escape room kit!</p>
              </div>

              <div class="row g-4">
                <div class="col-12 mb-4">
                  <div class="alert alert-info border-0">
                    <h4 class="alert-heading text-dark">
                      ${kitTypeName} Kit: ${theme}
                    </h4>
                    <p class="mb-2 text-dark">
                      Organization: <strong>${organization}</strong>
                    </p>
                    <p class="mb-0 text-dark">
                      <small>Secure session expires in 30 minutes. Downloads use one-time tokens and cannot be shared.</small>
                    </p>
                  </div>
                </div>

                <div class="col-md-6">
                  <div class="card">
                    <div class="card-body">
                      <h5 class="card-title">
                        Setup Instructions
                      </h5>
                      <p class="card-text">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                      </p>
                      <button onclick="downloadMaterial('setup-guide', '${sessionId}')" 
                              class="btn btn-primary">
                        Download Setup Guide
                      </button>
                    </div>
                  </div>
                </div>

                <div class="col-md-6">
                  <div class="card">
                    <div class="card-body">
                      <h5 class="card-title">
                        Accessibility Guide
                      </h5>
                      <p class="card-text">
                        Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                      </p>
                      <button onclick="downloadMaterial('accessibility-guide', '${sessionId}')" 
                              class="btn btn-primary">
                        Download Guide
                      </button>
                    </div>
                  </div>
                </div>

                <div class="col-md-6">
                  <div class="card">
                    <div class="card-body">
                      <h5 class="card-title">
                        Digital Content
                      </h5>
                      <p class="card-text">
                        Ut enim ad minim veniam, quis nostrud exercitation.
                      </p>
                      <a href="/api/digital-content?session=${sessionId}" 
                         class="btn btn-primary" target="_blank">
                        Access Digital Files
                      </a>
                    </div>
                  </div>
                </div>

                <div class="col-md-6">
                  <div class="card">
                    <div class="card-body">
                      <h5 class="card-title">
                        Online Activities
                      </h5>
                      <p class="card-text">
                        Duis aute irure dolor in reprehenderit in voluptate.
                      </p>
                      <button class="btn btn-primary" disabled>
                        Interactive Content
                      </button>
                    </div>
                  </div>
                </div>

                ${kitType === 'build' ? `
                <div class="col-12">
                  <div class="card">
                    <div class="card-body">
                      <h5 class="card-title">
                        Assembly Materials
                      </h5>
                      <p class="card-text">
                        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt.
                      </p>
                      <div class="row">
                        <div class="col-md-4 mb-2">
                          <button onclick="downloadMaterial('prop-templates', '${sessionId}')" 
                                  class="btn btn-outline-primary w-100">
                            Template Files
                          </button>
                        </div>
                        <div class="col-md-4 mb-2">
                          <button onclick="downloadMaterial('assembly-instructions', '${sessionId}')" 
                                  class="btn btn-outline-primary w-100">
                            Assembly Instructions
                          </button>
                        </div>
                        <div class="col-md-4 mb-2">
                          <button onclick="downloadMaterial('shopping-list', '${sessionId}')" 
                                  class="btn btn-outline-primary w-100">
                            Supply List
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                ` : ''}
              </div>
            </div>
          </section>
        `;
      }

      // Secure download function
      async function downloadMaterial(materialType, sessionId) {
        try {
          // Generate one-time download token
          const tokenResponse = await fetch('/api/generate-download-token', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ sessionId, materialType })
          });

          if (!tokenResponse.ok) {
            throw new Error('Failed to generate download token');
          }

          const { downloadToken } = await tokenResponse.json();

          // Use the one-time token to download the file
          const downloadUrl = `/api/download-material?token=${downloadToken}`;
          
          // Create a temporary link and click it to trigger download
          const link = document.createElement('a');
          link.href = downloadUrl;
          link.style.display = 'none';
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);

        } catch (error) {
          console.error('Download failed:', error);
          alert('Download failed. Please try again or contact support if the problem persists.');
        }
      }

      // Make downloadMaterial globally available
      (window as any).downloadMaterial = downloadMaterial;

      // Auto-uppercase purchase code input
      const purchaseCodeInput = document.getElementById('purchase-code') as HTMLInputElement;
      if (purchaseCodeInput) {
        purchaseCodeInput.addEventListener('input', function(e) {
          const target = e.target as HTMLInputElement;
          if (target) {
            target.value = target.value.toUpperCase();
          }
        });
      }
    });
  </script>

  <style scoped>
    .card {
      transition: transform 0.2s ease-in-out;
    }

    .card:hover {
      transform: translateY(-2px);
    }

    .btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }

    #purchase-code {
      font-family: monospace;
      font-size: 1.1rem;
      letter-spacing: 1px;
    }

    .alert-info {
      background: linear-gradient(135deg, #e3f2fd 0%, #f1f8ff 100%);
      border: 1px solid #bee5eb;
    }

    .spinner-border-sm {
      width: 1rem;
      height: 1rem;
    }
  </style>
</Layout>
